color = "blue",
size = 1
)
quadratic_data <- player_summaries_1 %>%
mutate(age = list(seq(min(cracks$age), max(cracks$age), length.out = 100))) %>%
unnest(age) %>%
mutate(log_market_value_in_eur = mapply(quadratic_fun, age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2],player_intercept))
ggplot(cracks, aes(x = age, y = log_market_value_in_eur, group = player_id)) +
geom_line(data = quadratic_data,
aes(x = age, y = log_market_value_in_eur, group = player_id),
color = "gray",
alpha=0.5
)
quadratic_data <- player_summaries_1 %>%
mutate(age = list(seq(min(cracks$age), max(cracks$age), length.out = 100))) %>%
unnest(age) %>%
mutate(log_market_value_in_eur = mapply(quadratic_fun, age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2],player_intercept))
ggplot(cracks, aes(x = age, y = log_market_value_in_eur, group = player_id)) +
geom_line(data = quadratic_data,
aes(x = age, y = log_market_value_in_eur, group = player_id),
color = "gray",
alpha=0.5
) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue",
size = 1
)
data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100))
quadratic_data <- player_summaries_1 %>%
mutate(age = list(seq(min(cracks$age), max(cracks$age), length.out = 100))) %>%
unnest(age) %>%
mutate(log_market_value_in_eur = mapply(quadratic_fun, age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2],player_intercept))
ggplot(cracks, aes(x = age, y = log_market_value_in_eur)) +
geom_line(data = quadratic_data,
aes(x = age, y = log_market_value_in_eur, group = player_id),
color = "gray",
alpha=0.5
) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue",
size = 1
)
tidy(model_1, effects = "ran_pars")
sigma_y^2 / (sigma_0^2 + sigma_y^2)
tidy_sigma <- tidy(model_1, effects = "ran_pars")
tidy_sigma
sigma_0 <- tidy_sigma[1,3]
sigma_y <- tidy_sigma[2,3]
sigma_0^2 / (sigma_0^2 + sigma_y^2)
sigma_y^2 / (sigma_0^2 + sigma_y^2)
player_summaries_1
player_summaries_1 %>% arrange(desc(player_intercept ))
player_summaries_1 %>% arrange(desc(player_intercept )) %>% head(10)
player_summaries_1 %>% arrange(desc(player_intercept )) %>% head(10)
player_summaries_1 %>%
arrange(desc(player_intercept ))
head(10)
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10)
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>%
$player_id
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10)$player_id
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10)
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>%
mutate(player_id = player_id)
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>% player_id
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>% .player_id
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>% [player_id]
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>% $player_id
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>%
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10)
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10)
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>%
select(player_id)
player_summaries_1 %>%
arrange(desc(player_intercept )) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(asc(player_intercept)) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
c(expensive_playes_ids, cheap_player_ids)
c(expensive_playes_ids, cheap_player_ids)[0]
c(expensive_playes_ids, cheap_player_ids)[0][0]
c(expensive_playes_ids, cheap_player_ids)[0][0]
c(expensive_playes_ids, cheap_player_ids)[0]
c(expensive_playes_ids, cheap_player_ids)[0]
expensive_playes_ids[0]
expensive_playes_ids
expensive_playes_ids[0]
expensive_playes_ids[1]
expensive_playes_ids[2]
c(expensive_playes_ids[1], cheap_player_ids[1])
c(expensive_playes_ids[1], cheap_player_ids[1])[0]
c(expensive_playes_ids[1], cheap_player_ids[1])[0][0]
c(expensive_playes_ids[1], cheap_player_ids[1])[0][0][0]
View(expensive_playes_ids)
rbind(expensive_playes_ids, cheap_player_ids)
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
```{r}
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cracks %>%
filter(player_id %in% rbind(expensive_playes_ids, cheap_player_ids)) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id))
rbind(expensive_playes_ids, cheap_player_ids)
cracks %>%
filter(player_id %in% rbind(expensive_playes_ids, cheap_player_ids))
rbind(expensive_playes_ids, cheap_player_ids)[1]
cracks %>%
filter(player_id %in% rbind(expensive_playes_ids, cheap_player_ids)[1])
as.list(rbind(expensive_playes_ids, cheap_player_ids)$player_id)
rbind(expensive_playes_ids, cheap_player_ids)$player_id
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(10) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cracks %>%
filter(player_id %in% rbind(expensive_playes_ids, cheap_player_ids)$player_id) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id))
# Cargamos los paquetes y el dataset
library(bayesrules)
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(tidybayes)
library(broom.mixed)
library(RColorBrewer)
football = read.csv("players_age_valuation.csv", header = TRUE)
football <- football %>%
mutate(age_2 = -1/50 * age^2)
football <- football %>%
mutate(log_market_value_in_eur = log(market_value_in_eur))
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
unique_colors <- brewer.pal(length(unique(player_ids)), "Set3")
# Create a named vector where each player_id corresponds to a color
color_mapping <- setNames(unique_colors, as.character(player_ids))
cracks %>%
filter(player_id %in% rbind(expensive_playes_ids, cheap_player_ids)$player_id) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id)) +
scale_color_manual(values = color_mapping)
player_ids
brewer.pal(length(unique(player_ids)), "Set3")
color_mapping
cracks %>%
filter(player_id %in% player_ids) %>%
asd
cracks %>%
filter(player_id %in% player_ids)
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
unique_colors <- brewer.pal(length(unique(player_ids)), "Set3")
# Create a named vector where each player_id corresponds to a color
color_mapping <- setNames(unique_colors, as.character(player_ids))
cracks %>%
filter(player_id %in% player_ids) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id)) +
scale_color_manual(values = color_mapping)
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
cracks$player_id <- as.factor(cracks$player_id)
unique_colors <- brewer.pal(length(unique(player_ids)), "Set3")
# Create a named vector where each player_id corresponds to a color
color_mapping <- setNames(unique_colors, as.character(player_ids))
cracks %>%
filter(player_id %in% player_ids) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id)) +
scale_color_manual(values = color_mapping)
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
cracks$player_id <- as.factor(cracks$player_id)
unique_colors <- brewer.pal(length(unique(player_ids)), "Set3")
# Create a named vector where each player_id corresponds to a color
color_mapping <- setNames(unique_colors, as.character(player_ids))
cracks %>%
filter(player_id %in% player_ids) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id)) +
scale_color_manual(values = color_mapping) +
geom_text(aes(label = name),
check_overlap = TRUE,  # Prevent overlapping labels
nudge_y = 0.1,  # Adjust label position if needed
size = 3)  # Control label size
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
cracks$player_id <- as.factor(cracks$player_id)
unique_colors <- brewer.pal(length(unique(player_ids)), "Set3")
# Create a named vector where each player_id corresponds to a color
color_mapping <- setNames(unique_colors, as.character(player_ids))
cracks %>%
filter(player_id %in% player_ids) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id)) +
scale_color_manual(values = color_mapping,
labels = function(x) {
# This function modifies the labels in the legend.
player_names <- cracks %>%
filter(player_id %in% x) %>%
distinct(player_id, name) %>%
pull(name)
return(player_names)
}) +  # Apply the custom color mapping
guides(color = guide_legend(title = "Jugadores"))  # Customize legend title
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
cracks$player_id <- as.factor(cracks$player_id)
unique_colors <- brewer.pal(length(unique(player_ids)), "Set3")
# Create a named vector where each player_id corresponds to a color
color_mapping <- setNames(unique_colors, as.character(player_ids))
cracks %>%
filter(player_id %in% player_ids) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("100 Regresiones para los jugadores mas caros y baratos")
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id)) +
scale_color_manual(values = color_mapping,
labels = function(x) {
# This function modifies the labels in the legend.
player_names <- cracks %>%
filter(player_id %in% x) %>%
distinct(player_id, name) %>%
pull(name)
return(player_names)
}) +  # Apply the custom color mapping
guides(color = guide_legend(title = "Jugadores"))  # Customize legend title
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
cracks$player_id <- as.factor(cracks$player_id)
unique_colors <- brewer.pal(length(unique(player_ids)), "Set3")
# Create a named vector where each player_id corresponds to a color
color_mapping <- setNames(unique_colors, as.character(player_ids))
cracks %>%
filter(player_id %in% player_ids) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("100 Regresiones para los jugadores mas caros y baratos") +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id)) +
scale_color_manual(values = color_mapping,
labels = function(x) {
# This function modifies the labels in the legend.
player_names <- cracks %>%
filter(player_id %in% x) %>%
distinct(player_id, name) %>%
pull(name)
return(player_names)
}) +  # Apply the custom color mapping
guides(color = guide_legend(title = "Jugadores"))  # Customize legend title
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
cracks$player_id <- as.factor(cracks$player_id)
unique_colors <- brewer.pal(length(unique(player_ids)), "Set3")
# Create a named vector where each player_id corresponds to a color
color_mapping <- setNames(unique_colors, as.character(player_ids))
cracks %>%
filter(player_id %in% player_ids) %>%
add_fitted_draws(model_1, n = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Regresiones para los jugadores mas caros y baratos") +
geom_line(
aes(y = .value, group = paste(player_id, .draw), color = player_id),
alpha = 0.1) +
geom_point(aes(color = player_id)) +
scale_color_manual(values = color_mapping,
labels = function(x) {
# This function modifies the labels in the legend.
player_names <- cracks %>%
filter(player_id %in% x) %>%
distinct(player_id, name) %>%
pull(name)
return(player_names)
}) +  # Apply the custom color mapping
guides(color = guide_legend(title = "Jugadores"))  # Customize legend title
# Cargamos los paquetes y el dataset
library(bayesrules)
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(tidybayes)
library(broom.mixed)
library(RColorBrewer)
football = read.csv("players_age_valuation.csv", header = TRUE)
football <- football %>%
mutate(age_2 = -1/50 * age^2)
football <- football %>%
mutate(log_market_value_in_eur = log(market_value_in_eur))
head(football)
players_with_history = football %>%
filter(age %in% c(20, 35)) %>%
group_by(player_id) %>%
filter(any(age == 20) & any(age == 35)) %>%
pull(player_id) %>%
unique()
cracks = football[football$player_id %in% head(players_with_history, 50),]
ggplot(data = cracks, aes(age, market_value_in_eur, color = name)) +
ggtitle("Precio de mercado de jugador") +
geom_line() +
theme(legend.position = "none")
ggplot(data = cracks, aes(age, log_market_value_in_eur, color = name)) +
geom_line() +
theme(legend.position = "none")
model_1 <- stan_glmer(
log_market_value_in_eur ~ age + age_2 + (1 | player_id),
data = cracks,
family = gaussian,
prior_intercept = normal(16, 3, autoscale = TRUE),
prior = normal(1, 1, autoscale = TRUE),
prior_aux = exponential(1, autoscale = TRUE),
prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),
chains = 1, iter = 5000*2, seed = 31419
)
prior_summary(model_1)
set.seed(31415)
cracks %>%
add_fitted_draws(model_1, n = 200) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(aes(y = .value, group = paste(player_id, .draw)), alpha = 0.15)
cracks %>%
add_fitted_draws(model_1, n = 4) %>%
ggplot(aes(x = age, y=log_market_value_in_eur)) +
geom_line(aes(y = .value, group = paste(player_id, .draw))) +
facet_wrap(~ .draw)
cracks %>%
add_predicted_draws(model_1, n = 100) %>%
ggplot(aes(x = age)) +
geom_density(aes(x = .prediction, group = .draw))
ggplot(cracks, aes(x = age, y = log_market_value_in_eur)) +
geom_point() +
facet_wrap(~ player_id)
mcmc_trace(model_1)
mcmc_dens_overlay(model_1)
mcmc_trace(model_1)
mcmc_dens_overlay(model_1)
