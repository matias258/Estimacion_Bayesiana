"0",""
"0","tidy_summary_1 <- tidy(model_1, effects = ""fixed"","
"0","                       conf.int = TRUE, conf.level = 0.80)"
"0",""
"0","quadratic_fun <- function(x, a, b, c) {"
"0","  return(-a*x^2/50 + b*x + c)"
"0","}"
"0",""
"0",""
"0","cracks %>%"
"0","  add_fitted_draws(model_1, n = 200, re_formula = NA) %>%"
"0","  ggplot(aes(x = age, y = log_market_value_in_eur)) +"
"0","  geom_line(aes(y = .value, group = .draw), alpha = 0.1) +"
"0","  geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)), "
"0","            aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3],   tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])), "
"0","            color = ""blue"", size = 1)"
"2","Warning: `fitted_draws` and `add_fitted_draws` are deprecated as their names were confusing.
- Use [add_]epred_draws() to get the expectation of the posterior predictive.
- Use [add_]linpred_draws() to get the distribution of the linear predictor.
- For example, you used [add_]fitted_draws(..., scale = ""response""), which
  means you most likely want [add_]epred_draws(...).
NOTE: When updating to the new functions, note that the `model` parameter is now
  named `object` and the `n` parameter is now named `ndraws`."
